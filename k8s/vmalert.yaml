apiVersion: v1
kind: ConfigMap
metadata:
  name: vmalert-rules
  namespace: monitoring
  labels:
    app.kubernetes.io/name: vmalert
    app.kubernetes.io/component: rules
data:
  system.yml: |
    groups:
    - name: system
      rules:
      - alert: HostDown
        expr: up == 0
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Host {{ $labels.instance }} is down"
          description: "Host {{ $labels.instance }} has been down for more than 5 minutes."
      
      - alert: HighCpuUsage
        expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage on {{ $labels.instance }}"
          description: "CPU usage is above 80% for more than 5 minutes on {{ $labels.instance }}."
      
      - alert: HighMemoryUsage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 90
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage on {{ $labels.instance }}"
          description: "Memory usage is above 90% for more than 5 minutes on {{ $labels.instance }}."
      
      - alert: DiskSpaceLow
        expr: (1 - (node_filesystem_avail_bytes / node_filesystem_size_bytes)) * 100 > 85
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Low disk space on {{ $labels.instance }}"
          description: "Disk usage is above 85% on {{ $labels.instance }} filesystem {{ $labels.mountpoint }}."

  network.yml: |
    groups:
    - name: network
      rules:
      - alert: HighNetworkTraffic
        expr: rate(node_network_receive_bytes_total[5m]) + rate(node_network_transmit_bytes_total[5m]) > 100000000
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High network traffic on {{ $labels.instance }}"
          description: "Network traffic is above 100MB/s on {{ $labels.instance }} interface {{ $labels.device }}."
      
      - alert: NetworkInterfaceDown
        expr: node_network_up == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Network interface down on {{ $labels.instance }}"
          description: "Network interface {{ $labels.device }} is down on {{ $labels.instance }}."

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vmalert
  namespace: monitoring
  labels:
    app.kubernetes.io/name: vmalert
    app.kubernetes.io/component: alerting
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: vmalert
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vmalert
        app.kubernetes.io/component: alerting
    spec:
      containers:
      - name: vmalert
        image: victoriametrics/vmalert:v1.96.0
        ports:
        - containerPort: 8880
          name: http
          protocol: TCP
        args:
        - --datasource.url=http://victoriametrics:8428
        - --notifier.url=http://alertmanager:9093
        - --rule=/etc/vmalert/rules/*.yml
        - --external.url=http://vmalert:8880
        - --web.external-url=http://vmalert:8880
        - --remoteWrite.url=http://victoriametrics:8428
        - --remoteRead.url=http://victoriametrics:8428
        - --evaluationInterval=30s
        volumeMounts:
        - name: rules
          mountPath: /etc/vmalert/rules
          readOnly: true
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
      volumes:
      - name: rules
        configMap:
          name: vmalert-rules

---
apiVersion: v1
kind: Service
metadata:
  name: vmalert
  namespace: monitoring
  labels:
    app.kubernetes.io/name: vmalert
    app.kubernetes.io/component: service
spec:
  type: ClusterIP
  ports:
  - port: 8880
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: vmalert